// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`RestModal render Should match RestModal component snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <RestModal />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <Modal
        autoFocus={true}
        backdrop={true}
        backdropTransition={
          Object {
            "mountOnEnter": true,
            "timeout": 150,
          }
        }
        centered={false}
        fade={true}
        isOpen={true}
        keyboard={true}
        modalTransition={
          Object {
            "timeout": 300,
          }
        }
        onClosed={[Function]}
        onOpened={[Function]}
        role="dialog"
        zIndex={1050}
      >
        <ModalHeader
          charCode={215}
          closeAriaLabel="Close"
          tag="h5"
          wrapTag="div"
        >
          Take a rest!
        </ModalHeader>
        <ModalBody
          tag="div"
        >
          <div>
            You deserve a break!
          </div>
          <div>
            Take a breather for another 
             seconds!
          </div>
        </ModalBody>
        <ModalFooter
          tag="div"
        >
          <Button
            color="primary"
            tag="button"
          >
            Cancel Break
          </Button>
        </ModalFooter>
      </Modal>,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "autoFocus": true,
        "backdrop": true,
        "backdropTransition": Object {
          "mountOnEnter": true,
          "timeout": 150,
        },
        "centered": false,
        "children": Array [
          <ModalHeader
            charCode={215}
            closeAriaLabel="Close"
            tag="h5"
            wrapTag="div"
          >
            Take a rest!
          </ModalHeader>,
          <ModalBody
            tag="div"
          >
            <div>
              You deserve a break!
            </div>
            <div>
              Take a breather for another 
               seconds!
            </div>
          </ModalBody>,
          <ModalFooter
            tag="div"
          >
            <Button
              color="primary"
              tag="button"
            >
              Cancel Break
            </Button>
          </ModalFooter>,
        ],
        "fade": true,
        "isOpen": true,
        "keyboard": true,
        "modalTransition": Object {
          "timeout": 300,
        },
        "onClosed": [Function],
        "onOpened": [Function],
        "role": "dialog",
        "toggle": undefined,
        "zIndex": 1050,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "charCode": 215,
            "children": "Take a rest!",
            "closeAriaLabel": "Close",
            "tag": "h5",
            "wrapTag": "div",
          },
          "ref": null,
          "rendered": "Take a rest!",
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              <div>
                You deserve a break!
              </div>,
              <div>
                Take a breather for another 
                 seconds!
              </div>,
            ],
            "tag": "div",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "You deserve a break!",
              },
              "ref": null,
              "rendered": "You deserve a break!",
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  "Take a breather for another ",
                  undefined,
                  " seconds!",
                ],
              },
              "ref": null,
              "rendered": Array [
                "Take a breather for another ",
                undefined,
                " seconds!",
              ],
              "type": "div",
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <Button
              color="primary"
              tag="button"
            >
              Cancel Break
            </Button>,
            "tag": "div",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "Cancel Break",
              "color": "primary",
              "onClick": undefined,
              "tag": "button",
            },
            "ref": null,
            "rendered": "Cancel Break",
            "type": [Function],
          },
          "type": [Function],
        },
      ],
      "type": [Function],
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <Modal
          autoFocus={true}
          backdrop={true}
          backdropTransition={
            Object {
              "mountOnEnter": true,
              "timeout": 150,
            }
          }
          centered={false}
          fade={true}
          isOpen={true}
          keyboard={true}
          modalTransition={
            Object {
              "timeout": 300,
            }
          }
          onClosed={[Function]}
          onOpened={[Function]}
          role="dialog"
          zIndex={1050}
        >
          <ModalHeader
            charCode={215}
            closeAriaLabel="Close"
            tag="h5"
            wrapTag="div"
          >
            Take a rest!
          </ModalHeader>
          <ModalBody
            tag="div"
          >
            <div>
              You deserve a break!
            </div>
            <div>
              Take a breather for another 
               seconds!
            </div>
          </ModalBody>
          <ModalFooter
            tag="div"
          >
            <Button
              color="primary"
              tag="button"
            >
              Cancel Break
            </Button>
          </ModalFooter>
        </Modal>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "autoFocus": true,
          "backdrop": true,
          "backdropTransition": Object {
            "mountOnEnter": true,
            "timeout": 150,
          },
          "centered": false,
          "children": Array [
            <ModalHeader
              charCode={215}
              closeAriaLabel="Close"
              tag="h5"
              wrapTag="div"
            >
              Take a rest!
            </ModalHeader>,
            <ModalBody
              tag="div"
            >
              <div>
                You deserve a break!
              </div>
              <div>
                Take a breather for another 
                 seconds!
              </div>
            </ModalBody>,
            <ModalFooter
              tag="div"
            >
              <Button
                color="primary"
                tag="button"
              >
                Cancel Break
              </Button>
            </ModalFooter>,
          ],
          "fade": true,
          "isOpen": true,
          "keyboard": true,
          "modalTransition": Object {
            "timeout": 300,
          },
          "onClosed": [Function],
          "onOpened": [Function],
          "role": "dialog",
          "toggle": undefined,
          "zIndex": 1050,
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "charCode": 215,
              "children": "Take a rest!",
              "closeAriaLabel": "Close",
              "tag": "h5",
              "wrapTag": "div",
            },
            "ref": null,
            "rendered": "Take a rest!",
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": Array [
                <div>
                  You deserve a break!
                </div>,
                <div>
                  Take a breather for another 
                   seconds!
                </div>,
              ],
              "tag": "div",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "You deserve a break!",
                },
                "ref": null,
                "rendered": "You deserve a break!",
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    "Take a breather for another ",
                    undefined,
                    " seconds!",
                  ],
                },
                "ref": null,
                "rendered": Array [
                  "Take a breather for another ",
                  undefined,
                  " seconds!",
                ],
                "type": "div",
              },
            ],
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": <Button
                color="primary"
                tag="button"
              >
                Cancel Break
              </Button>,
              "tag": "div",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "Cancel Break",
                "color": "primary",
                "onClick": undefined,
                "tag": "button",
              },
              "ref": null,
              "rendered": "Cancel Break",
              "type": [Function],
            },
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
